python中
array = [1, 8, 15]
g = (x for x in array if array.count(x) > 0)
array = [2, 8, 22]

print(list(g))
[8]
原因：
在生成器表达式中, in 子句在声明时执行, 而条件子句则是在运行时执行，
所以在运行前, array 已经被重新赋值为 [2, 8, 22], 因此对于之前的 1, 8 和 15,
 只有 count(8) 的结果是大于 0 的, 所以生成器只会生成 8.
 
is 运算符检查两个运算对象是否引用自同一对象 (即, 它检查两个预算对象是否相同).
== 运算符比较两个运算对象的值是否相等.
因此 is 代表引用相同, == 代表值相等. 下面的例子可以很好的说明这点,