之后写的是把生成的报告页面也用spring boot的访问html页面的方式去访问。
那么因为不会自动修改html页面的名字。所以得在template包中在新建一个包就用
测试的名字，然后把生成的报告复制进去。那么就可以之间访问了。

在运行selenium测试的时候提示找不到com.google.common.collect.ImmutableMap这个类
这个就是那个类加载问题的残留问题的，那解决方式也很简单，
就是没有哪个类就把那个类动态加载进来。

现在想办法去解决那个类加载器的问题
上面那些取巧的方式，坏处在于没有普遍性。
就是说如果脚本需要新的jar包依赖，那么就需要去修改源代码。
那这就明显不符合开闭原则。总不能一直去修改代码。
而且一直动态加载Jar包那么程序的运行速度就会很慢。这就不行了。

最后的版本在F:\ideadata\copy_test_xitong\Edition_1.0.0这里面

总结：
		在来实习之前，写代码然后去编译运行。一直以为编译能通过就能运行。
	写了这个作业之后才发现。原来编译通过后还有各种问题。然后要去学习动态加载的具体过程。
	java的反射机制到底是怎么回事。还有类加载的具体过程。
	写这次作业之前，一直以为写代码发现问题出在哪里很难。写完这次作业才发现原来。最难的还是
	找到bug而且去解决那种JAVa本身的机制给代码带来的bug才是最难的
